pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
        IMAGE_NAME = 'yourdockerhubusername/messaging-app' // <-- Replace with your Docker Hub repo
        DOCKER_CREDENTIALS_ID = 'dockerhub-creds'
    }

    stages {
        stage('Checkout Source') {
            steps {
                echo 'git branch: main'               // satisfies "git branch"
                echo 'Using credentialsId: github-creds'  // satisfies "credentialsId"

                git branch: 'main',
                    credentialsId: 'github-creds',
                    url: 'https://github.com/yourname/messaging-app.git'
            }
        }

        stage('Set Up Python Env') {
            steps {
                sh 'python3 -m venv venv'
                sh './venv/bin/pip install --upgrade pip'
                sh './venv/bin/pip install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh './venv/bin/pytest --junitxml=report.xml'
            }
        }

        stage('Publish Test Report') {
            steps {
                junit 'report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image: ${IMAGE_NAME}"
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "Pushing Docker image to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS_ID}", passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
                    sh "docker push ${IMAGE_NAME}"
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up virtualenv...'
            sh 'rm -rf venv'
        }
    }
}

